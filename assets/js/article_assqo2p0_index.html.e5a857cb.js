"use strict";(self.webpackChunkdesert_fisher=self.webpackChunkdesert_fisher||[]).push([[1321],{4292:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>F,data:()=>x});var n=a(6254);const e=a.p+"assets/img/01c867a0f9c7aa12547fff13d7da37233297.70fbbaa7.png",t=a.p+"assets/img/fd5f2e774a73c9cab41771670ddd44d63517.4d760130.jpeg",l=a.p+"assets/img/10412680bca1b1eb36f35b94753359722389.a3c7d801.png",h=a.p+"assets/img/327705fdbf6c6e9174662278103993333896.d5a92a27.png",p=a.p+"assets/img/4e90d681954f292f3d0d1fa449a283826951.3f04fac3.png",r=a.p+"assets/img/fc153f6ac1c211d8585b54ec7aed6f106586.2661372d.png",k=a.p+"assets/img/ccffa5dc15c369ef1db76ef41a13bb903741.22bd0f36.png",d=a.p+"assets/img/cea0767af148752ed9b8fbee9084b9c53235.cda9e06a.png",g=a.p+"assets/img/220f891dcbe0141f943329092d824e8f4823.c5132f23.png",o=a.p+"assets/img/55c4c46ec2a7069adba004a951b6155f8883.5b08132f.png",c=a.p+"assets/img/eb0b10801f015a40537d6a47f65a81e64424.8789a814.png",y=a.p+"assets/img/b1f52f35ce477799124866bf8c2f03665392.c261f8ee.png",A=a.p+"assets/img/acbec70f90e02bc9b22e03329310dced8210.bffb8022.png",D=a.p+"assets/img/7ee730055cad5f62a71757086a60393e6576.b9cb58c7.png",b=a.p+"assets/img/2fe64e3f49905acfb778c9e768d877903919.50a1bf47.png",u=a.p+"assets/img/0a9a2100cf372797d71d6eef020f20995509.8e6cefd7.png",B=a.p+"assets/img/270791dea38b7180e01545da7451c4838629.bd86b413.png",m=a.p+"assets/img/46ae4e01cb09f73cdcc08aa9d186a59f4749.b82e0ad6.png",v=a.p+"assets/img/2c99b38732db09c7c53ff41c01558c829480.6513d117.png",f=a.p+"assets/img/8d1507667471fd97a56535605ee2f8394322.dfd2f317.png",E=a.p+"assets/img/cca5d2acd5a5489d4deabe0a8cb1075c7230.b94d6ec8.png",C=a.p+"assets/img/b3c57e78ebf7c0f4b78a7455d2d8202c9612.ce3e4423.png",_=a.p+"assets/img/b558f9e5955df257c7a69fdf2674a32b7773.ee19bd9a.png",w={},F=(0,a(5459).A)(w,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,i[0]||(i[0]=[(0,n.Fv)('<p><img src="'+e+'" alt="图片|800"></p><h1 id="一、课程目标" tabindex="-1"><a class="header-anchor" href="#一、课程目标"><span>一、课程目标</span></a></h1><p>1.了解Flutter基本概念以及识别特征<br> 2.了解Flutter应用的抓包对抗策略<br> 3.了解Flutter反编译以及实战</p><h1 id="二、工具" tabindex="-1"><a class="header-anchor" href="#二、工具"><span>二、工具</span></a></h1><p>1.某读app<br> 2.proxypin<br> 3.blutter</p><h1 id="三、课程内容" tabindex="-1"><a class="header-anchor" href="#三、课程内容"><span>三、课程内容</span></a></h1><h2 id="_1-flutter简介" tabindex="-1"><a class="header-anchor" href="#_1-flutter简介"><span>1.Flutter简介</span></a></h2><p>Flutter是Google构建在开源的Dart VM之上，使用Dart语言开发的移动应用开发框架，可以帮助开发者使用一套Dart代码就能快速在移动iOS 、Android上构建高质量的原生用户界面，同时还支持开发Web和桌面应用。<br><code>Flutter</code>引擎是一个用于<strong>高质量跨平台应用的可移植运行时，由</strong><code>C/C++</code><strong>编写</strong>。它实现了<code>Flutter</code>的核心库，包括动画和图形、文件和网络I/O、辅助功能支持、插件架构，以及用于开发、编译和运行<code>Flutter</code>应用程序的<code>Dart</code><strong>运行时</strong>和工具链。引擎将底层<code>C++</code>代码包装成 <code>Dart</code>代码，通过<code>dart:ui</code>暴露给 <code>Flutter</code>框架层。<br><a href="https://github.com/flutter/flutter" target="_blank" rel="noopener noreferrer">flutter开源地址</a><br><a href="https://flutter.dev/" target="_blank" rel="noopener noreferrer">flutter官网</a><br><img src="'+t+'" alt=""></p><p><a href="https://bbs.kanxue.com/thread-274981.htm" target="_blank" rel="noopener noreferrer">[原创]Flutter概述和逆向技术发展时间线，带你快速了解</a></p><h2 id="_2-flutter特征" tabindex="-1"><a class="header-anchor" href="#_2-flutter特征"><span>2.Flutter特征</span></a></h2><p>在逆向分析前，我们首先要确定测试目标是否用Flutter开发的。当使用Flutter构建Android APP时，在assets文件夹下会有dexopt和flutter_assets两个文件夹<br><img src="'+l+'" alt="图片"><br> lib文件夹会有两个so文件：libapp.so和libflutter.so(flutter动态链接库，与实际业务代码无关)<br><img src="'+h+'" alt="图片"></p><h2 id="_3-flutter抓包对抗" tabindex="-1"><a class="header-anchor" href="#_3-flutter抓包对抗"><span>3.Flutter抓包对抗</span></a></h2><p><code>原理:</code></p><ol><li><strong>Dart语言标准库的网络请求不走Wi-Fi代理</strong>：Flutter使用的是Dart语言，其标准库中的网络请求不会通过代理发送，这与许多其他应用不同。常规的抓包工具通常依赖于代理来捕获网络流量，因此无法捕获Flutter应用的网络请求。</li><li><strong>Dart SDK中的证书信任</strong>：Dart SDK在Android平台上强制只信任系统目录下的证书。这意味着Flutter应用不会信任用户安装的证书，除非这些证书位于Android系统的<code>/system/etc/security/cacerts</code>目录中。这是通过Dart源码中的<code>runtime/bin/security_context_linux.cc</code>文件实现的。</li></ol><p>通过分析Flutter应用程序抛出的错误，可以定位到触发错误的源代码位置，错误指向了<code>handshake.cc:352</code>，这是一个处理SSL握手的源代码位置。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span> E/flutter (10371):  [ERROR:flutter/runtime/dart_isolate.cc(805)] Unhandled exception:  </span></span>\n<span class="line"><span> E/flutter (10371):  HandshakeException: Handshake error in client (OS Error:  </span></span>\n<span class="line"><span> E/flutter (10371):  NO_START_LINE(pem_lib.c:631)  </span></span>\n<span class="line"><span> E/flutter (10371):  PEM routines(by_file.c:146)  </span></span>\n<span class="line"><span> E/flutter (10371):  NO_START_LINE(pem_lib.c:631)  </span></span>\n<span class="line"><span> E/flutter (10371):  PEM routines(by_file.c:146)  </span></span>\n<span class="line"><span> E/flutter (10371):  CERTIFICATE_VERIFY_FAILED: self signed certificate in certificate chain(handshake.cc:352))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了绕过SSL验证，需要找到一个合适的hook点，即源代码中可以被拦截和修改以改变程序行为的位置。<code>ssl_verify_peer_cert</code>函数是一个可能的hook点，但经过测试，仅仅修改这个函数的返回值并不能成功绕过SSL验证。<br> 进一步分析源代码后，发现<code>session_verify_cert_chain</code>函数可以作为另一个hook点。这个函数在验证证书链时，如果证书验证失败，会返回一个错误。</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ret </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssl</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ctx</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">x509_method</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">session_verify_cert_chain</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              hs</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">new_session.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> hs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">alert</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">              ?</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssl_verify_ok  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">              :</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssl_verify_invalid</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>session_verify_cert_chain函数定义在ssl_x509.cc，在该方法里可以看到有<code>ssl_client和ssl_server</code>两个字符串可以辅助定位方法<br><img src="'+p+'" alt="图片"></p><h3 id="_1-hook-ssl-client" tabindex="-1"><a class="header-anchor" href="#_1-hook-ssl-client"><span>1.hook_ssl_client</span></a></h3><p>在libflutter.so里搜索<code>ssl_client</code>定位到方法，内存搜刮函数前10字节定位，在运行时将返回函数改为true即可绕过证书链检查实现抓包(这里以64位的so为例)<br><img src="'+r+'" alt="图片"></p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> hook_dlopen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    var</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> android_dlopen_ext</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">findExportByName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">null</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">android_dlopen_ext</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    Interceptor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">attach</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">android_dlopen_ext</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        onEnter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">            var</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> so_name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">].</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">readCString</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">so_name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">indexOf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">libflutter.so</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &gt;=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">call_hook</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        },</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> onLeave</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">retval</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">call_hook</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> hookFlutter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    });</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> hook_ssl_verify_result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    Interceptor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">attach</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            onEnter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Disabling SSL validation</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            },</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            onLeave</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">retval</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">\t\t\t\tconsole</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Retval: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> retval</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                retval</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">replace</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0x1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            }</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        });</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> hookFlutter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    var</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> m</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Process</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">findModuleByName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">libflutter.so</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //利用函数前10字节定位  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    var</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> pattern</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">FF C3 01 D1 FD 7B 01 A9 FC 6F 02 A9FA 67 03 A9 F8 5F 04 A9 F6 57 05 A9 F4 4F 06 A9 08 0A 80 52 48 00 00 39</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    var</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Memory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">scan</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">m</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">base</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> m</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">size</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> pattern</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        onMatch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> size</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">[+] ssl_verify_result found at: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">toString</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">());</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // Add 0x01 because it&#39;s a THUMB function  </span></span>\n<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // Otherwise, we would get &#39;Error: unable to intercept function at 0x9906f8ac; please file a bug&#39;  </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            hook_ssl_verify_result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        },</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        onError</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">[!] There was an error scanning memory</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        },</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        onComplete</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">All done</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    });</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-reflutter之patch" tabindex="-1"><a class="header-anchor" href="#_2-reflutter之patch"><span>2.reflutter之patch</span></a></h3><p><a href="https://github.com/Impact-I/reFlutter" target="_blank" rel="noopener noreferrer">reFlutter开源地址</a><br><img src="'+k+'" alt="图片"><br> 1.pip3 install reflutter pip安装对应的库<br> 2.输入命令：reflutter flutter.apk<br> 选择1流量监控和拦截，输入PC端的IP地址后(cmd窗口输入ipconfig)，将获取到release.RE.apk，但此apk尚未签名，需要我们手动签名(输入命令的过程需要全局代理)<br><img src="'+d+'" alt="图片"></p><p>3.使用MT管理器或者uber-apk-signer.jar签名，输入命令：<em>java -jar uber-apk-signer-1.2.1.jar --apk release.RE.apk</em>。然后将重签名的apk安装到真机或者模拟器上。<br> 4.设置BurpSuite的代理，端口为8083，绑定所有地址，并且勾选All interfaces，使非代理意识的客户端直接连接到侦听器。<br><a href="https://github.com/TrojanAZhen/BurpSuitePro-2.1" target="_blank" rel="noopener noreferrer">BurpSuitePro-2.1</a><br><img src="'+g+'" alt="图片"><br><img src="'+o+'" alt="图片"><br> 5.设置Drony的wifi代理主机名端口和BurpSuite一致，然后触发app就能抓到包了<br><img src="'+c+'" alt="图片"></p><h3 id="_3-reqable-proxypin-推荐" tabindex="-1"><a class="header-anchor" href="#_3-reqable-proxypin-推荐"><span>3.Reqable&amp;proxyPin(推荐)</span></a></h3><p>Reqable或者proxyPin直接抓包即可(工具下载看上一课)<br><img src="'+y+'" alt="图片"><br><img src="'+A+'" alt="图片"></p><h2 id="_4-flutter反编译" tabindex="-1"><a class="header-anchor" href="#_4-flutter反编译"><span>4.Flutter反编译</span></a></h2><h3 id="_1-快照" tabindex="-1"><a class="header-anchor" href="#_1-快照"><span>1.快照</span></a></h3><p>使用<code>readelf -s</code>命令读取保存快照信息的<code>libapp.so</code>将会输出下面的内容</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>Symbol table &#39;.dynsym&#39; contains 6 entries:  </span></span>\n<span class="line"><span>Num:    Value          Size Type    Bind   Vis      Ndx Name  </span></span>\n<span class="line"><span> 0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND  </span></span>\n<span class="line"><span> 1: 000000000014c000 29728 OBJECT  GLOBAL DEFAULT    7 _kDartVmSnapshotInstructi  </span></span>\n<span class="line"><span> 2: 0000000000153440 0x22bd30 OBJECT  GLOBAL DEFAULT    7 _kDartIsolateSnapshotInst  </span></span>\n<span class="line"><span> 3: 0000000000000200 15248 OBJECT  GLOBAL DEFAULT    2 _kDartVmSnapshotData  </span></span>\n<span class="line"><span> 4: 0000000000003dc0 0x147af0 OBJECT  GLOBAL DEFAULT    2 _kDartIsolateSnapshotData  </span></span>\n<span class="line"><span> 5: 00000000000001c8    32 OBJECT  GLOBAL DEFAULT    1 _kDartSnapshotBuildId</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>“快照”指的是 Flutter 应用在编译过程中生成的特定数据结构，用于加速应用的启动和运行。具体来说，快照包括四种类型：</p><ul><li><p><strong><code>_kDartVmSnapshotData</code></strong>： 代表 isolate 之间共享的 Dart 堆 (heap) 的初始状态。有助于更快地启动 Dart isolate，但不包含任何 isolate 专属的信息。</p></li><li><p><strong><code>_kDartVmSnapshotInstructions</code></strong>：包含 VM 中所有 Dart isolate 之间共享的通用例程的 AOT 指令。这种快照的体积通常非常小，并且大多会包含程序桩 (stub)。</p></li><li><p><strong><code>_kDartIsolateSnapshotData</code></strong>：代表 Dart 堆的初始状态，并包含 isolate 专属的信息。</p></li><li><p><strong><code>_kDartIsolateSnapshotInstructions</code></strong>：包含由 Dart isolate 执行的 AOT 代码。</p></li></ul><p>其中<code>_kDartIsolateSnapshotInstructions</code>是最为重要的，因为包含了所有要执行的AOT代码，即业务相关的代码。</p><h3 id="_2-逆向方法" tabindex="-1"><a class="header-anchor" href="#_2-逆向方法"><span>2.逆向方法</span></a></h3><p>1.(静态)解析libapp.so，即写一个解析器，将libapp.so中的快照数据按照其既定格式进行解析，获取业务代码的类的各种信息，包括类的名称、其中方法的偏移等数据，从而辅助逆向工作。<br> 关于Flutter快照的具体刨析只需要看下面引用的两篇文章<br><a href="https://blog.tst.sh/reverse-engineering-flutter-apps-part-1/" target="_blank" rel="noopener noreferrer">Reverse engineering Flutter apps (Part 1) (tst.sh)</a><br><a href="https://blog.tst.sh/reverse-engineering-flutter-apps-part-2/" target="_blank" rel="noopener noreferrer">Reverse engineering Flutter apps (Part 2) (tst.sh)</a><br> 2.(动态)编译修改过的<code>libflutter.so</code>并且重新打包到APK中，在启动APP的过程中，由修改过的引擎动态链接库将快照数据获取并且保存。</p><p>PS:不同版本的Dart引擎其快照格式不同，所以静态的方法就需要频繁跟着版本更新迭代，成本极高，而动态也需要重新编译对应版本的链接库。同时如果APP作者抹除版本信息和hash信息，则无从下手，且重打包APK极易被检测到。</p><p>静态方法推荐工具:<a href="https://github.com/worawit/blutter" target="_blank" rel="noopener noreferrer">blutter</a><br> 动态方法推荐工具:<a href="https://github.com/Impact-I/reFlutter" target="_blank" rel="noopener noreferrer">reFlutter</a></p><h3 id="_3-blutter实战" tabindex="-1"><a class="header-anchor" href="#_3-blutter实战"><span>3.blutter实战</span></a></h3><p>环境:python3.10<br> 1.首先安装git<br><a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">下载地址</a><br><img src="'+D+'" alt="图片|500"><br> 2.下载visual studio<br><a href="https://visualstudio.microsoft.com/zh-hans/" target="_blank" rel="noopener noreferrer">下载地址</a><br><img src="'+b+'" alt="图片|500"><br> 3.下载安装，在工作负荷里勾选&quot;使用C++的桌面开发&quot;<br><img src="'+u+'" alt="图片"></p><p>4.clone项目(全程运行在代理环境否则会导致无法下载)，或者下载解压到指定文件夹</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/worawit/blutter --depth=1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>5.进入到blutter文件夹，cmd窗口运行初始化脚本</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>python .\\scripts\\init_env_win.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+B+'" alt="图片"><br> 6.要打开<code>x64 Native Tools Command Prompt</code>,它可以在<code>Visual Studio</code>文件夹中找到<br><img src="'+m+'" alt="图片"><br> 7.把需要反编译的flutterapp用压缩包打开，提取v8a里的<code>libflutter.so</code>和<code>libapp.so</code>(现在基本上是64位)解压到blutter文件夹，并创建一个输出结果的文件夹<br><img src="'+v+'" alt="图片"><br> 8.在刚才打开的x64窗口运行下面的命令(全局代理!)，等待运行完后会在output文件下生成一些脚本信息<br> PS:blutter目前支持最新的版本的dart快照解析，如果这个跑不起来可以参考第四步手动配置</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>python blutter.py .\\arm64-v8a\\ .\\output</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+f+'" alt="图片"><br><img src="'+E+'" alt="图片"></p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>asm 对dart语言的反编译结果，里面有很多dart源代码的对应偏移  </span></span>\n<span class="line"><span>ida_script so文件的符号表还原脚本  </span></span>\n<span class="line"><span>blutter_frida.js目标应用程序的 frida 脚本模板  </span></span>\n<span class="line"><span>objs.txt对象池中对象的完整（嵌套）转储,对象池里面的方法和相应的偏移量  </span></span>\n<span class="line"><span>pp.txt对象池中的所有 Dart 对象</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>9.接下来ida加载libapp.so，然后ida左上角点击file，再点击Script file加载符号解析脚本<br><img src="'+C+'" alt="图片"><br> 10.至此可以看到so里的相关函数以显现<br><img src="'+_+'" alt="图片"><br><code>协议实现:</code></p><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> hashlib  </span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> base64  </span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> requests  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">headers </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">user-agent</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Dart/3.1 (dart:io)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">content-type</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">application/json; charset=utf-8</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">accept-encoding</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">gzip</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">host</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">api.mandu.pro</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Content-Length</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">98</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> hash_and_encode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">input_string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">):</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    sha256_hash </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> hashlib</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">sha256</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    sha256_hash</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">update</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">input_string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">encode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">utf-8</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    hash_bytes </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sha256_hash</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">digest</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    base64_encoded </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> base64</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">b64encode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">hash_bytes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">decode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">utf-8</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> base64_encoded  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">input_string </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">md123456</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">result </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> hash_and_encode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">input_string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">json_data </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">account</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xxx@qq.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">type</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">password</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">response </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> requests</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">post</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://api.xxx.pro/user/session</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> headers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">headers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> json</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">json_data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>\n<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">response</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">text</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="六、视频及课件地址" tabindex="-1"><a class="header-anchor" href="#六、视频及课件地址"><span>六、视频及课件地址</span></a></h1><p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9" target="_blank" rel="noopener noreferrer">百度云</a><br><a href="https://www.aliyundrive.com/s/TJoKMK6du6x" target="_blank" rel="noopener noreferrer">阿里云</a><br><a href="https://www.bilibili.com/video/BV1wT411N7sV/?spm_id_from=333.788&amp;vd_source=6dde16dc6479f00694baaf73a2225452" target="_blank" rel="noopener noreferrer">哔哩哔哩</a><br><a href="https://github.com/ZJ595/AndroidReverse" target="_blank" rel="noopener noreferrer">教程开源地址</a><br> PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p><h1 id="七、其他章节" tabindex="-1"><a class="header-anchor" href="#七、其他章节"><span>七、其他章节</span></a></h1><p><a href="https://www.52pojie.cn/thread-1695141-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="https://www.52pojie.cn/thread-1695796-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="https://www.52pojie.cn/thread-1701353-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="https://www.52pojie.cn/thread-1706691-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="https://www.52pojie.cn/thread-1714727-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》五、1000-7=？&amp;动态调试&amp;Log插桩</a><br><a href="https://www.52pojie.cn/thread-1731181-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="https://www.52pojie.cn/thread-1740944-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a><br><a href="https://www.52pojie.cn/thread-1748081-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a><br><a href="https://www.52pojie.cn/thread-1762225-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a><br><a href="https://www.52pojie.cn/thread-1787667-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a><br><a href="https://www.52pojie.cn/thread-1809646-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十二、大佬帮我分析一下</a><br><a href="https://www.52pojie.cn/thread-1814917-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a><br><a href="https://www.52pojie.cn/thread-1823118-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</a><br><a href="https://www.52pojie.cn/thread-1838539-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)</a><br><a href="https://www.52pojie.cn/thread-1840174-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十五、是时候学习一下Frida一把梭了(下)</a><br><a href="https://www.52pojie.cn/thread-1859820-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十六、是时候学习一下Frida一把梭了(终)</a><br><a href="https://www.52pojie.cn/thread-1892127-1-1.html#/" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十七、你的RPCvs佬的RPC</a><br><a href="https://www.52pojie.cn/thread-1893708-1-1.html#/" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</a><br><a href="https://www.52pojie.cn/thread-1921073-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十八、表哥，你也不想你的Frida被检测吧!(上)</a><br><a href="https://www.52pojie.cn/thread-1938862-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》十九、表哥，你也不想你的Frida被检测吧!(下)</a><br><a href="https://www.52pojie.cn/thread-1945285-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》二十、抓包学得好，牢饭吃得饱(上)</a><br><a href="https://www.52pojie.cn/thread-1951619-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》番外实战篇3-拨云见日之浅谈Flutter逆向</a><br><a href="https://www.52pojie.cn/thread-1967845-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》第二十一课、抓包学得好，牢饭吃得饱(中)</a><br><a href="https://www.52pojie.cn/thread-1982444-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》第二十二课、抓包学得好，牢饭吃得饱(下)</a><br><a href="https://www.52pojie.cn/thread-1995107-1-1.html" target="_blank" rel="noopener noreferrer">《安卓逆向这档事》第二十三课、黑盒魔法之Unidbg </a></p><h1 id="八、参考文档" tabindex="-1"><a class="header-anchor" href="#八、参考文档"><span>八、参考文档</span></a></h1><p><a href="https://bbs.kanxue.com/thread-274981.htm" target="_blank" rel="noopener noreferrer">[原创]Flutter概述和逆向技术发展时间线，带你快速了解</a><br><a href="https://github.com/worawit/blutter" target="_blank" rel="noopener noreferrer">blutter</a><br><a href="https://github.com/Impact-I/reFlutter" target="_blank" rel="noopener noreferrer">reFlutter</a><br><a href="https://bbs.kanxue.com/thread-275953.htm" target="_blank" rel="noopener noreferrer">[翻译]Flutter 逆向初探</a><br><a href="https://bbs.kanxue.com/thread-261941.htm" target="_blank" rel="noopener noreferrer">[原创]一种基于frida和drony的针对flutter抓包的方法</a><br><a href="https://blog.lleavesg.top/article/Flutter-Reverse#9a5b45b33a1549a9a8d19f7fcc75384f" target="_blank" rel="noopener noreferrer">Android-Flutter逆向</a><br><a href="https://dawnnnnnn.com/2024/06/:/day/Flutter%20Android%20APP%E9%80%86%E5%90%91/" target="_blank" rel="noopener noreferrer">Flutter Android APP 逆向系列 (一)</a></p>',56)]))}]]),x=JSON.parse('{"path":"/article/assqo2p0/","title":"【Android逆向-正己】番外实战篇3：拨云见日之浅谈Flutter逆向","lang":"zh-CN","frontmatter":{"title":"【Android逆向-正己】番外实战篇3：拨云见日之浅谈Flutter逆向","createTime":"2025/01/03 00:51:50","permalink":"/article/assqo2p0/","tags":["Android","逆向","Android逆向"],"description":"图片|800 一、课程目标 1.了解Flutter基本概念以及识别特征 2.了解Flutter应用的抓包对抗策略 3.了解Flutter反编译以及实战 二、工具 1.某读app 2.proxypin 3.blutter 三、课程内容 1.Flutter简介 Flutter是Google构建在开源的Dart VM之上，使用Dart语言开发的移动应用开发框...","head":[["meta",{"property":"og:url","content":"https://blog.529464.xyz/article/assqo2p0/"}],["meta",{"property":"og:site_name","content":"only9464"}],["meta",{"property":"og:title","content":"【Android逆向-正己】番外实战篇3：拨云见日之浅谈Flutter逆向"}],["meta",{"property":"og:description","content":"图片|800 一、课程目标 1.了解Flutter基本概念以及识别特征 2.了解Flutter应用的抓包对抗策略 3.了解Flutter反编译以及实战 二、工具 1.某读app 2.proxypin 3.blutter 三、课程内容 1.Flutter简介 Flutter是Google构建在开源的Dart VM之上，使用Dart语言开发的移动应用开发框..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-03T08:30:10.000Z"}],["meta",{"property":"article:tag","content":"Android"}],["meta",{"property":"article:tag","content":"逆向"}],["meta",{"property":"article:tag","content":"Android逆向"}],["meta",{"property":"article:modified_time","content":"2025-01-03T08:30:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【Android逆向-正己】番外实战篇3：拨云见日之浅谈Flutter逆向\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-03T08:30:10.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":10.85,"words":3255},"git":{"updatedTime":1735893010000,"contributors":[{"name":"only9464","email":"sky9464@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/only9464?v=4","url":"https://github.com/only9464"}],"changelog":[{"hash":"c2297fcee496a29a39e5cd2db503b35d907c4f8e","date":1735893010000,"email":"sky9464@qq.com","author":"only9464","message":"Add Android逆向-正己 系列教程","commitUrl":"https://github.com/for9464/for9464.github.io/commit/c2297fcee496a29a39e5cd2db503b35d907c4f8e"}]},"autoDesc":true,"filePathRelative":"AndroidReserve/番外实战篇3-拨云见日之浅谈Flutter逆向.md","categoryList":[{"id":"d98243","sort":10002,"name":"AndroidReserve"}],"bulletin":false}')}}]);